// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_89", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, D, F, G, H, I, E,
  A = {RenderSliverSingleBoxAdapter: function RenderSliverSingleBoxAdapter() {
    }, _RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin: function _RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin() {
    }, _RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers: function _RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers() {
    }, RenderSliverFillRemaining: function RenderSliverFillRemaining(t0, t1) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _.parentData = _._geometry = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t1;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _.__RenderObject__semantics_FI = $;
    }, SliverFillRemaining: function SliverFillRemaining(t0, t1, t2) {
      this.child = t0;
      this.hasScrollBody = t1;
      this.key = t2;
    }, _SliverFillRemainingWithoutScrollable: function _SliverFillRemainingWithoutScrollable(t0, t1) {
      this.child = t0;
      this.key = t1;
    }, PagedChildBuilderDelegate: function PagedChildBuilderDelegate(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.itemBuilder = t0;
      _.firstPageErrorIndicatorBuilder = t1;
      _.newPageErrorIndicatorBuilder = t2;
      _.firstPageProgressIndicatorBuilder = t3;
      _.noItemsFoundIndicatorBuilder = t4;
      _.noMoreItemsIndicatorBuilder = t5;
      _.$ti = t6;
    }, PagingController: function PagingController(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._statusListeners = t0;
      _._pageRequestListeners = t1;
      _.invisibleItemsThreshold = t2;
      _.firstPageKey = t3;
      _._change_notifier$_value = t4;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t5;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.$ti = t6;
    }, PagingState: function PagingState(t0, t1, t2, t3) {
      var _ = this;
      _.itemList = t0;
      _.error = t1;
      _.nextPageKey = t2;
      _.$ti = t3;
    }, PagingStatus: function PagingStatus(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AppendedSliverChildBuilderDelegate$(addAutomaticKeepAlives, addRepaintBoundaries, addSemanticIndexes, appendixBuilder, builder, childCount, semanticIndexCallback) {
      var t1 = appendixBuilder == null,
        t2 = t1 ? builder : new A.AppendedSliverChildBuilderDelegate_closure(childCount, appendixBuilder, builder);
      t1 = t1 ? childCount : childCount + 1;
      return new A.AppendedSliverChildBuilderDelegate(t2, t1, true, true, true, semanticIndexCallback == null ? new A.AppendedSliverChildBuilderDelegate_closure0() : semanticIndexCallback, null);
    },
    AppendedSliverChildBuilderDelegate: function AppendedSliverChildBuilderDelegate(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.builder = t0;
      _.childCount = t1;
      _.addAutomaticKeepAlives = t2;
      _.addRepaintBoundaries = t3;
      _.addSemanticIndexes = t4;
      _.semanticIndexCallback = t5;
      _.findChildIndexCallback = t6;
    },
    AppendedSliverChildBuilderDelegate_closure: function AppendedSliverChildBuilderDelegate_closure(t0, t1, t2) {
      this.childCount = t0;
      this.appendixBuilder = t1;
      this.builder = t2;
    },
    AppendedSliverChildBuilderDelegate_closure0: function AppendedSliverChildBuilderDelegate_closure0() {
    },
    ListenableListener: function ListenableListener(t0, t1, t2, t3) {
      var _ = this;
      _.listenable = t0;
      _.listener = t1;
      _.child = t2;
      _.key = t3;
    },
    _ListenableListenerState: function _ListenableListenerState() {
      this._framework$_element = this._widget = null;
    },
    FooterTile: function FooterTile(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    NewPageProgressIndicator: function NewPageProgressIndicator(t0) {
      this.key = t0;
    },
    _extension_0_get_itemCount(_this) {
      var t1 = _this._change_notifier$_value.itemList;
      t1 = t1 == null ? null : t1.length;
      return t1 == null ? 0 : t1;
    },
    PagedLayoutProtocol: function PagedLayoutProtocol(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PagedLayoutBuilder: function PagedLayoutBuilder(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.pagingController = t0;
      _.builderDelegate = t1;
      _.loadingListingBuilder = t2;
      _.errorListingBuilder = t3;
      _.completedListingBuilder = t4;
      _.shrinkWrapFirstPageIndicators = t5;
      _.layoutProtocol = t6;
      _.key = t7;
      _.$ti = t8;
    },
    _PagedLayoutBuilderState: function _PagedLayoutBuilderState(t0) {
      var _ = this;
      _._hasRequestedNextPage = false;
      _._framework$_element = _._widget = null;
      _.$ti = t0;
    },
    _PagedLayoutBuilderState__newPageProgressIndicatorBuilder_closure: function _PagedLayoutBuilderState__newPageProgressIndicatorBuilder_closure() {
    },
    _PagedLayoutBuilderState_build_closure: function _PagedLayoutBuilderState_build_closure(t0) {
      this.$this = t0;
    },
    _PagedLayoutBuilderState_build_closure0: function _PagedLayoutBuilderState_build_closure0(t0) {
      this.$this = t0;
    },
    _PagedLayoutBuilderState_build__closure: function _PagedLayoutBuilderState_build__closure(t0, t1) {
      this.$this = t0;
      this.itemList = t1;
    },
    _PagedLayoutBuilderState_build__closure0: function _PagedLayoutBuilderState_build__closure0(t0, t1) {
      this.$this = t0;
      this.itemList = t1;
    },
    _PagedLayoutBuilderState_build__closure1: function _PagedLayoutBuilderState_build__closure1(t0, t1) {
      this.$this = t0;
      this.itemList = t1;
    },
    _PagedLayoutBuilderState_build__closure2: function _PagedLayoutBuilderState_build__closure2(t0) {
      this.$this = t0;
    },
    _PagedLayoutBuilderState__buildListItemWidget_closure: function _PagedLayoutBuilderState__buildListItemWidget_closure(t0) {
      this.$this = t0;
    },
    _FirstPageStatusIndicatorBuilder: function _FirstPageStatusIndicatorBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.shrinkWrap = t1;
      _.layoutProtocol = t2;
      _.key = t3;
    },
    PagedListView: function PagedListView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.pagingController = t0;
      _.builderDelegate = t1;
      _.padding = t2;
      _.scrollDirection = t3;
      _.reverse = t4;
      _.controller = t5;
      _.primary = t6;
      _.physics = t7;
      _.shrinkWrap = t8;
      _.cacheExtent = t9;
      _.semanticChildCount = t10;
      _.dragStartBehavior = t11;
      _.keyboardDismissBehavior = t12;
      _.restorationId = t13;
      _.clipBehavior = t14;
      _.hitTestBehavior = t15;
      _.key = t16;
      _.$ti = t17;
    },
    PagedSliverList: function PagedSliverList(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.pagingController = t0;
      _.builderDelegate = t1;
      _._paged_sliver_list$_separatorBuilder = t2;
      _.addAutomaticKeepAlives = t3;
      _.addRepaintBoundaries = t4;
      _.addSemanticIndexes = t5;
      _.itemExtent = t6;
      _.prototypeItem = t7;
      _.shrinkWrapFirstPageIndicators = t8;
      _.key = t9;
      _.$ti = t10;
    },
    PagedSliverList_build_closure1: function PagedSliverList_build_closure1(t0) {
      this.$this = t0;
    },
    PagedSliverList_build_closure: function PagedSliverList_build_closure(t0) {
      this.$this = t0;
    },
    PagedSliverList_build_closure0: function PagedSliverList_build_closure0(t0) {
      this.$this = t0;
    },
    ChapterEnd: function ChapterEnd(t0) {
      this.key = t0;
    },
    MasterScroller$(book, key, startChapter) {
      return new A.MasterScroller(book, startChapter, key);
    },
    MasterScroller: function MasterScroller(t0, t1, t2) {
      this.book = t0;
      this.startChapter = t1;
      this.key = t2;
    },
    _MasterScrollerState: function _MasterScrollerState(t0) {
      var _ = this;
      _.___MasterScrollerState__pagingController_F = $;
      _._scrollController = t0;
      _._framework$_element = _._widget = null;
    },
    _MasterScrollerState_initState_closure: function _MasterScrollerState_initState_closure(t0) {
      this.$this = t0;
    }
  },
  C, K, L;
  J = holdersList[1];
  B = holdersList[0];
  D = holdersList[2];
  F = holdersList[90];
  G = holdersList[36];
  H = holdersList[49];
  I = holdersList[88];
  E = holdersList[34];
  A = hunkHelpers.updateHolder(holdersList[7], A);
  C = holdersList[87];
  K = holdersList[35];
  L = holdersList[89];
  A.RenderSliverSingleBoxAdapter.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof B.SliverPhysicalParentData))
        child.parentData = new B.SliverPhysicalParentData(D.Offset_0_0);
    },
    setChildParentData$3(child, constraints, geometry) {
      var t2,
        t1 = child.parentData;
      t1.toString;
      type$.SliverPhysicalParentData._as(t1);
      switch (B.applyGrowthDirectionToAxisDirection(constraints.axisDirection, constraints.growthDirection).index) {
        case 0:
          t2 = new B.Offset(0, geometry.paintExtent + constraints.scrollOffset - geometry.scrollExtent);
          break;
        case 3:
          t2 = new B.Offset(geometry.paintExtent + constraints.scrollOffset - geometry.scrollExtent, 0);
          break;
        case 1:
          t2 = new B.Offset(-constraints.scrollOffset, 0);
          break;
        case 2:
          t2 = new B.Offset(0, -constraints.scrollOffset);
          break;
        default:
          t2 = null;
      }
      t1.paintOffset = t2;
    },
    hitTestChildren$3$crossAxisPosition$mainAxisPosition(result, crossAxisPosition, mainAxisPosition) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return this.hitTestBoxChild$4$crossAxisPosition$mainAxisPosition(B.BoxHitTestResult$wrap(result), t1, crossAxisPosition, mainAxisPosition);
      return false;
    },
    childMainAxisPosition$1(child) {
      return -type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(this)).scrollOffset;
    },
    applyPaintTransform$2(child, transform) {
      var t1 = child.parentData;
      t1.toString;
      t1 = type$.SliverPhysicalParentData._as(t1).paintOffset;
      transform.translate$2(t1._dx, t1._dy);
    },
    paint$2(context, offset) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null && this._geometry.visible) {
        t2 = t1.parentData;
        t2.toString;
        context.paintChild$2(t1, offset.$add(0, type$.SliverPhysicalParentData._as(t2).paintOffset));
      }
    }
  };
  A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$RenderObject$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers.prototype = {};
  A.RenderSliverFillRemaining.prototype = {
    performLayout$0() {
      var paintedChildSize, cacheExtent, t2, _this = this, _null = null,
        constraints = type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(_this)),
        extent = constraints.viewportMainAxisExtent - constraints.precedingScrollExtent,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        switch (B.axisDirectionToAxis(constraints.axisDirection).index) {
          case 0:
            t1 = t1._computeIntrinsics$3(D._IntrinsicDimension_1, constraints.crossAxisExtent, t1.get$computeMaxIntrinsicWidth());
            break;
          case 1:
            t1 = t1._computeIntrinsics$3(D._IntrinsicDimension_3, constraints.crossAxisExtent, t1.get$computeMaxIntrinsicHeight());
            break;
          default:
            t1 = _null;
        }
        extent = Math.max(extent, t1);
        t1 = _this.RenderObjectWithChildMixin__child;
        t1.toString;
        t1.layout$1(constraints.asBoxConstraints$2$maxExtent$minExtent(extent, extent));
      }
      paintedChildSize = _this.calculatePaintOffset$3$from$to(constraints, 0, extent);
      cacheExtent = _this.calculateCacheOffset$3$from$to(constraints, 0, extent);
      t1 = B.SliverGeometry$(cacheExtent, extent > constraints.remainingPaintExtent || constraints.scrollOffset > 0, _null, _null, paintedChildSize, 0, paintedChildSize, 0, extent, _null);
      _this._geometry = t1;
      t2 = _this.RenderObjectWithChildMixin__child;
      if (t2 != null)
        _this.setChildParentData$3(t2, constraints, t1);
    }
  };
  A.SliverFillRemaining.prototype = {
    build$1(context) {
      return new A._SliverFillRemainingWithoutScrollable(this.child, null);
    }
  };
  A._SliverFillRemainingWithoutScrollable.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderSliverFillRemaining(null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    }
  };
  A.PagedChildBuilderDelegate.prototype = {};
  A.PagingController.prototype = {
    set$value(newValue) {
      if (this._change_notifier$_value.get$status() !== newValue.get$status())
        this.notifyStatusListeners$1(newValue.get$status());
      this.super$ValueNotifier$value(newValue);
    },
    appendPage$2(newItems, nextPageKey) {
      var _this = this,
        previousItems = _this._change_notifier$_value.itemList;
      _this.set$value(new A.PagingState(D.JSArray_methods.$add(previousItems == null ? B._setArrayType([], _this.$ti._eval$1("JSArray<2>")) : previousItems, newItems), null, nextPageKey, _this.$ti._eval$1("PagingState<1,2>")));
    },
    notifyStatusListeners$1($status) {
      var localListeners, _i, listener,
        t1 = this._statusListeners,
        t2 = t1 == null ? null : t1._list.length === 0;
      if (t2 !== false)
        return;
      t1.toString;
      localListeners = B.List_List$from(t1, true, type$.void_Function_PagingStatus);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        listener = localListeners[_i];
        if (this._statusListeners.contains$1(0, listener))
          listener.call$1($status);
      }
    },
    notifyPageRequestListeners$1(pageKey) {
      var localListeners, _i, listener,
        t1 = this._pageRequestListeners,
        t2 = t1 == null ? null : t1._list.length === 0;
      if (t2 !== false)
        return;
      t1.toString;
      localListeners = B.List_List$from(t1, true, this.$ti._eval$1("~(1)"));
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        listener = localListeners[_i];
        if (this._pageRequestListeners.contains$1(0, listener))
          listener.call$1(pageKey);
      }
    },
    dispose$0() {
      this._pageRequestListeners = this._statusListeners = null;
      this.super$ChangeNotifier$dispose();
    }
  };
  A.PagingState.prototype = {
    get$status() {
      var _this = this,
        t1 = _this.get$_hasItems() && _this.nextPageKey != null;
      if (t1)
        return C.PagingStatus_3;
      if (_this.get$_hasItems() && _this.nextPageKey == null)
        return C.PagingStatus_0;
      t1 = _this.get$_itemCount();
      if (t1 == null)
        return C.PagingStatus_2;
      _this.get$_hasItems();
      if (_this.get$_itemCount() != null && _this.get$_itemCount() === 0)
        return C.PagingStatus_1;
      else
        return C.PagingStatus_4;
    },
    toString$0(_) {
      return "PagingState(itemList: \u2524" + B.S(this.itemList) + "\u251c, error: " + B.S(this.error) + ", nextPageKey: " + B.S(this.nextPageKey) + ")";
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = false;
      if (other instanceof A.PagingState) {
        t2 = other.itemList;
        t3 = this.itemList;
        if (t2 == null ? t3 == null : t2 === t3)
          t1 = other.nextPageKey == this.nextPageKey;
      }
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(J.get$hashCode$(this.itemList), D.JSNull_methods.get$hashCode(this.error), J.get$hashCode$(this.nextPageKey), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    get$_itemCount() {
      var t1 = this.itemList;
      return t1 == null ? null : t1.length;
    },
    get$_hasItems() {
      var itemCount = this.get$_itemCount();
      return itemCount != null && itemCount > 0;
    }
  };
  A.PagingStatus.prototype = {
    _enumToString$0() {
      return "PagingStatus." + this._name;
    }
  };
  A.AppendedSliverChildBuilderDelegate.prototype = {};
  A.ListenableListener.prototype = {
    createState$0() {
      return new A._ListenableListenerState();
    }
  };
  A._ListenableListenerState.prototype = {
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this._widget.listenable.addListener$1(_this.get$_handleChange());
      _this._handleChange$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.listenable;
      if (_this._widget.listenable !== t1) {
        t2 = _this.get$_handleChange();
        t1.removeListener$1(t2);
        _this._widget.listenable.addListener$1(t2);
      }
    },
    dispose$0() {
      this._widget.listenable.removeListener$1(this.get$_handleChange());
      this.super$State$dispose();
    },
    _handleChange$0() {
      this._widget.listener.call$0();
    },
    build$1(context) {
      return this._widget.child;
    }
  };
  A.FooterTile.prototype = {
    build$1(context) {
      return new B.Padding(C.EdgeInsets_0_16_0_16, B.Center$(this.child, null, null), null);
    }
  };
  A.NewPageProgressIndicator.prototype = {
    build$1(context) {
      return C.FooterTile_tLx;
    }
  };
  A.PagedLayoutProtocol.prototype = {
    _enumToString$0() {
      return "PagedLayoutProtocol." + this._name;
    }
  };
  A.PagedLayoutBuilder.prototype = {
    createState$0() {
      return new A._PagedLayoutBuilderState(this.$ti._eval$1("_PagedLayoutBuilderState<1,2>"));
    },
    loadingListingBuilder$4(arg0, arg1, arg2, arg3) {
      return this.loadingListingBuilder.call$4(arg0, arg1, arg2, arg3);
    },
    errorListingBuilder$4(arg0, arg1, arg2, arg3) {
      return this.errorListingBuilder.call$4(arg0, arg1, arg2, arg3);
    },
    completedListingBuilder$4(arg0, arg1, arg2, arg3) {
      return this.completedListingBuilder.call$4(arg0, arg1, arg2, arg3);
    }
  };
  A._PagedLayoutBuilderState.prototype = {
    get$_firstPageErrorIndicatorBuilder() {
      var t1 = this._widget.builderDelegate;
      return t1.firstPageErrorIndicatorBuilder;
    },
    get$_paged_layout_builder$_newPageErrorIndicatorBuilder() {
      var t1 = this._widget.builderDelegate;
      return t1.newPageErrorIndicatorBuilder;
    },
    get$_paged_layout_builder$_firstPageProgressIndicatorBuilder() {
      var t1 = this._widget.builderDelegate;
      return t1.firstPageProgressIndicatorBuilder;
    },
    get$_newPageProgressIndicatorBuilder() {
      this._widget.toString;
      return new A._PagedLayoutBuilderState__newPageProgressIndicatorBuilder_closure();
    },
    get$_paged_layout_builder$_noItemsFoundIndicatorBuilder() {
      var t1 = this._widget.builderDelegate;
      return t1.noItemsFoundIndicatorBuilder;
    },
    build$1(context) {
      var _this = this,
        t1 = _this._widget.pagingController;
      return new A.ListenableListener(t1, new A._PagedLayoutBuilderState_build_closure(_this), new B.ValueListenableBuilder(t1, new A._PagedLayoutBuilderState_build_closure0(_this), null, null, _this.$ti._eval$1("ValueListenableBuilder<PagingState<1,2>>")), null);
    },
    _buildListItemWidget$3(context, index, itemList) {
      var t1, t2, isBuildingTriggerIndexItem, item, _this = this;
      if (!_this._hasRequestedNextPage) {
        t1 = A._extension_0_get_itemCount(_this._widget.pagingController);
        t2 = _this._widget.pagingController;
        isBuildingTriggerIndexItem = index === Math.max(0, t1 - t2.invisibleItemsThreshold);
        if (t2._change_notifier$_value.nextPageKey != null && isBuildingTriggerIndexItem) {
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A._PagedLayoutBuilderState__buildListItemWidget_closure(_this));
          _this._hasRequestedNextPage = true;
        }
      }
      item = itemList[index];
      return _this._widget.builderDelegate.itemBuilder.call$3(context, item, index);
    },
    _paged_layout_builder$_newPageErrorIndicatorBuilder$1(arg0) {
      return this.get$_paged_layout_builder$_newPageErrorIndicatorBuilder().call$1(arg0);
    }
  };
  A._FirstPageStatusIndicatorBuilder.prototype = {
    build$1(context) {
      var t1;
      if (this.layoutProtocol === C.PagedLayoutProtocol_0) {
        t1 = this.builder.call$1(context);
        return new A.SliverFillRemaining(t1, false, null);
      } else {
        t1 = B.Center$(this.builder.call$1(context), null, null);
        return t1;
      }
    }
  };
  A.PagedListView.prototype = {
    buildChildLayout$1(context) {
      var _null = null;
      return new A.PagedSliverList(this.pagingController, this.builderDelegate, _null, true, true, true, _null, _null, false, _null, this.$ti._eval$1("PagedSliverList<1,2>"));
    }
  };
  A.PagedSliverList.prototype = {
    build$1(context) {
      var _this = this;
      return new A.PagedLayoutBuilder(_this.pagingController, _this.builderDelegate, new A.PagedSliverList_build_closure(_this), new A.PagedSliverList_build_closure0(_this), new A.PagedSliverList_build_closure1(_this), false, C.PagedLayoutProtocol_0, null, _this.$ti._eval$1("PagedLayoutBuilder<1,2>"));
    },
    _buildSliverList$3$statusIndicatorBuilder(itemBuilder, itemCount, statusIndicatorBuilder) {
      var delegate = A.AppendedSliverChildBuilderDelegate$(true, true, true, statusIndicatorBuilder, itemBuilder, itemCount, null),
        t1 = B.SliverList$(delegate);
      return t1;
    }
  };
  A.ChapterEnd.prototype = {
    build$1(context) {
      return C.Padding_VmP;
    }
  };
  A.MasterScroller.prototype = {
    createState$0() {
      return new A._MasterScrollerState(B.ScrollController$(false));
    }
  };
  A._MasterScrollerState.prototype = {
    initState$0() {
      var t1, t2, t3, t4, t5, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.startChapter;
      t2 = B._setArrayType([], type$.JSArray_of_void_Function_PagingStatus);
      t3 = B._setArrayType([], type$.JSArray_of_void_Function_int);
      t4 = new B.ObserverList(t3, type$.ObserverList_of_void_Function_int);
      t5 = $.$get$ChangeNotifier__emptyListeners();
      _this.___MasterScrollerState__pagingController_F !== $ && B.throwUnnamedLateFieldAI();
      _this.___MasterScrollerState__pagingController_F = new A.PagingController(new B.ObserverList(t2, type$.ObserverList_of_void_Function_PagingStatus), t4, 1, t1, new A.PagingState(null, null, t1, type$.PagingState_int_Chapter), t5, type$.PagingController_int_Chapter);
      t4._isDirty = true;
      t3.push(new A._MasterScrollerState_initState_closure(_this));
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = B.ScrollConfiguration_of(context).copyWith$1$scrollbars(false),
        t2 = _this.___MasterScrollerState__pagingController_F;
      t2 === $ && B.throwUnnamedLateFieldNI();
      return new B.McScaffold("Scroll", B.ScrollConfiguration$(t1, new A.PagedListView(t2, new A.PagedChildBuilderDelegate(_this.get$itemBuilder(), _this.get$_firstPageErrorIndicator(), _this.get$_newPageErrorIndicatorBuilder(), _this.get$_firstPageProgressIndicatorBuilder(), _this.get$_noItemsFoundIndicatorBuilder(), _this.get$_noMoreItemsIndicatorBuilder(), type$.PagedChildBuilderDelegate_Chapter), _null, D.Axis_1, false, _this._scrollController, _null, _null, false, _null, _null, D.DragStartBehavior_1, D.ScrollViewKeyboardDismissBehavior_0, _null, D.Clip_1, D.HitTestBehavior_1, C.ValueKey_MZv, type$.PagedListView_int_Chapter)), C.ValueKey_IWE);
    },
    itemBuilder$3(context, chapter, index) {
      if (index === 0 && chapter.get$isTitle())
        return C.TitleWidget_ValueKey_title;
      return new K.ReaderScreen(chapter, this._scrollController, new B.ValueKey("Reader_" + chapter.get$id(), type$.ValueKey_String));
    },
    _fetchPage$1(pageKey) {
      return this._fetchPage$body$_MasterScrollerState(pageKey);
    },
    _fetchPage$body$_MasterScrollerState(pageKey) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, chap, nextPageKey, exception, stackTrace, t1, exception0, $async$exception0;
      var $async$_fetchPage$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self._widget.book.hasKey$1(pageKey) ? 2 : 4;
              break;
            case 2:
              // then
              $async$handler = 6;
              $async$goto = 9;
              return B._asyncAwait($async$self._widget.book.chapters[pageKey].getOrLoadChapter$0(), $async$_fetchPage$1);
            case 9:
              // returning from await.
              chap = $async$result;
              nextPageKey = chap.get$nextId();
              B.S(nextPageKey);
              t1 = $async$self.___MasterScrollerState__pagingController_F;
              t1 === $ && B.throwUnnamedLateFieldNI();
              t1.appendPage$2(B._setArrayType([chap], type$.JSArray_Chapter), nextPageKey);
              $async$handler = 1;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception0 = $async$errorStack.pop();
              exception = B.unwrapException($async$exception0);
              stackTrace = B.getTraceFromException($async$exception0);
              J.toString$0$(exception);
              H.ErrorList_showError(exception, stackTrace);
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 8:
              // after finally
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              t1 = $async$self.___MasterScrollerState__pagingController_F;
              t1 === $ && B.throwUnnamedLateFieldNI();
              t1.appendPage$2(B._setArrayType([], type$.JSArray_Chapter), null);
            case 3:
              // join
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$_fetchPage$1, $async$completer);
    },
    _firstPageErrorIndicator$1(context) {
      return C.ErrorBox_JCe;
    },
    _newPageErrorIndicatorBuilder$1(context) {
      return C.ErrorBox_XqC;
    },
    _noItemsFoundIndicatorBuilder$1(context) {
      return C.LoadingPage_l3f;
    },
    _noMoreItemsIndicatorBuilder$1(context) {
      return B.LayoutBuilder$(this.get$_noMoreItemsIndicatorLayoutBuilder());
    },
    _noMoreItemsIndicatorLayoutBuilder$2(context, constraints) {
      return C.ChapterEnd_null;
    },
    _firstPageProgressIndicatorBuilder$1(context) {
      return C.LoadingPage_aKF;
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["Widget(BuildContext)", "~()", "NewPageProgressIndicator(BuildContext)", "Widget(BuildContext,Chapter,int)", "Widget(BuildContext,BoxConstraints)"]);
  A.AppendedSliverChildBuilderDelegate_closure.prototype = {
    call$2(context, index) {
      if (index === this.childCount)
        return this.appendixBuilder.call$1(context);
      return this.builder.call$2(context, index);
    },
    $signature: 90
  };
  A.AppendedSliverChildBuilderDelegate_closure0.prototype = {
    call$2(_, index) {
      return index;
    },
    $signature: 219
  };
  A._PagedLayoutBuilderState__newPageProgressIndicatorBuilder_closure.prototype = {
    call$1(_) {
      return C.NewPageProgressIndicator_null;
    },
    $signature: typesOffset + 2
  };
  A._PagedLayoutBuilderState_build_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this,
        $status = t1._widget.pagingController._change_notifier$_value.get$status();
      if ($status === C.PagingStatus_2) {
        t2 = t1._widget.pagingController;
        t2.notifyPageRequestListeners$1(t2.firstPageKey);
      }
      if ($status === C.PagingStatus_3)
        t1._hasRequestedNextPage = false;
    },
    $signature: 0
  };
  A._PagedLayoutBuilderState_build_closure0.prototype = {
    call$3(context, pagingState, _) {
      var t2, child,
        t1 = this.$this,
        itemList = t1._widget.pagingController._change_notifier$_value.itemList;
      switch (pagingState.get$status().index) {
        case 3:
          t2 = t1._widget;
          child = t2.loadingListingBuilder$4(context, new A._PagedLayoutBuilderState_build__closure(t1, itemList), A._extension_0_get_itemCount(t2.pagingController), t1.get$_newPageProgressIndicatorBuilder());
          break;
        case 0:
          t2 = t1._widget;
          child = t2.completedListingBuilder$4(context, new A._PagedLayoutBuilderState_build__closure0(t1, itemList), A._extension_0_get_itemCount(t2.pagingController), t1._widget.builderDelegate.noMoreItemsIndicatorBuilder);
          break;
        case 2:
          child = new A._FirstPageStatusIndicatorBuilder(t1.get$_paged_layout_builder$_firstPageProgressIndicatorBuilder(), false, t1._widget.layoutProtocol, null);
          break;
        case 5:
          t2 = t1._widget;
          child = t2.errorListingBuilder$4(context, new A._PagedLayoutBuilderState_build__closure1(t1, itemList), A._extension_0_get_itemCount(t2.pagingController), new A._PagedLayoutBuilderState_build__closure2(t1));
          break;
        case 1:
          child = new A._FirstPageStatusIndicatorBuilder(t1.get$_paged_layout_builder$_noItemsFoundIndicatorBuilder(), false, t1._widget.layoutProtocol, null);
          break;
        default:
          child = new A._FirstPageStatusIndicatorBuilder(t1.get$_firstPageErrorIndicatorBuilder(), false, t1._widget.layoutProtocol, null);
      }
      t1._widget.toString;
      return child;
    },
    $signature() {
      return this.$this.$ti._eval$1("Widget(BuildContext,PagingState<1,2>,Widget?)");
    }
  };
  A._PagedLayoutBuilderState_build__closure.prototype = {
    call$2(context, index) {
      var t1 = this.itemList;
      t1.toString;
      return this.$this._buildListItemWidget$3(context, index, t1);
    },
    $signature: 90
  };
  A._PagedLayoutBuilderState_build__closure0.prototype = {
    call$2(context, index) {
      var t1 = this.itemList;
      t1.toString;
      return this.$this._buildListItemWidget$3(context, index, t1);
    },
    $signature: 90
  };
  A._PagedLayoutBuilderState_build__closure1.prototype = {
    call$2(context, index) {
      var t1 = this.itemList;
      t1.toString;
      return this.$this._buildListItemWidget$3(context, index, t1);
    },
    $signature: 90
  };
  A._PagedLayoutBuilderState_build__closure2.prototype = {
    call$1(context) {
      return this.$this._paged_layout_builder$_newPageErrorIndicatorBuilder$1(context);
    },
    $signature: 9
  };
  A._PagedLayoutBuilderState__buildListItemWidget_closure.prototype = {
    call$1(_) {
      var t1 = this.$this,
        t2 = t1._widget.pagingController,
        t3 = t2._change_notifier$_value.nextPageKey;
      t2.notifyPageRequestListeners$1(t3 == null ? t1.$ti._precomputed1._as(t3) : t3);
    },
    $signature: 7
  };
  A.PagedSliverList_build_closure1.prototype = {
    call$4(context, itemBuilder, itemCount, noMoreItemsIndicatorBuilder) {
      return this.$this._buildSliverList$3$statusIndicatorBuilder(itemBuilder, itemCount, noMoreItemsIndicatorBuilder);
    },
    $signature: 577
  };
  A.PagedSliverList_build_closure.prototype = {
    call$4(context, itemBuilder, itemCount, progressIndicatorBuilder) {
      return this.$this._buildSliverList$3$statusIndicatorBuilder(itemBuilder, itemCount, progressIndicatorBuilder);
    },
    $signature: 220
  };
  A.PagedSliverList_build_closure0.prototype = {
    call$4(context, itemBuilder, itemCount, errorIndicatorBuilder) {
      return this.$this._buildSliverList$3$statusIndicatorBuilder(itemBuilder, itemCount, errorIndicatorBuilder);
    },
    $signature: 220
  };
  A._MasterScrollerState_initState_closure.prototype = {
    call$1(pageKey) {
      this.$this._fetchPage$1(pageKey);
    },
    $signature: 24
  };
  (function installTearOffs() {
    var _instance_0_u = hunkHelpers._instance_0u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_2_u = hunkHelpers._instance_2u;
    _instance_0_u(A.PagingController.prototype, "get$dispose", "dispose$0", 1);
    _instance_0_u(A._ListenableListenerState.prototype, "get$_handleChange", "_handleChange$0", 1);
    var _;
    _instance(_ = A._MasterScrollerState.prototype, "get$itemBuilder", 0, 3, null, ["call$3"], ["itemBuilder$3"], 3, 0, 0);
    _instance_1_u(_, "get$_firstPageErrorIndicator", "_firstPageErrorIndicator$1", 0);
    _instance_1_u(_, "get$_newPageErrorIndicatorBuilder", "_newPageErrorIndicatorBuilder$1", 0);
    _instance_1_u(_, "get$_noItemsFoundIndicatorBuilder", "_noItemsFoundIndicatorBuilder$1", 0);
    _instance_1_u(_, "get$_noMoreItemsIndicatorBuilder", "_noMoreItemsIndicatorBuilder$1", 0);
    _instance_2_u(_, "get$_noMoreItemsIndicatorLayoutBuilder", "_noMoreItemsIndicatorLayoutBuilder$2", 4);
    _instance_1_u(_, "get$_firstPageProgressIndicatorBuilder", "_firstPageProgressIndicatorBuilder$1", 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin, B.RenderSliver);
    _inherit(A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers, A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin);
    _inherit(A.RenderSliverSingleBoxAdapter, A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers);
    _inherit(A.RenderSliverFillRemaining, A.RenderSliverSingleBoxAdapter);
    _inheritMany(B.StatelessWidget, [A.SliverFillRemaining, A.FooterTile, A.NewPageProgressIndicator, A._FirstPageStatusIndicatorBuilder, A.PagedSliverList, A.ChapterEnd]);
    _inherit(A._SliverFillRemainingWithoutScrollable, B.SingleChildRenderObjectWidget);
    _inheritMany(B.Object, [A.PagedChildBuilderDelegate, A.PagingState]);
    _inherit(A.PagingController, B.ValueNotifier);
    _inheritMany(B._Enum, [A.PagingStatus, A.PagedLayoutProtocol]);
    _inherit(A.AppendedSliverChildBuilderDelegate, B.SliverChildBuilderDelegate);
    _inheritMany(B.Closure2Args, [A.AppendedSliverChildBuilderDelegate_closure, A.AppendedSliverChildBuilderDelegate_closure0, A._PagedLayoutBuilderState_build__closure, A._PagedLayoutBuilderState_build__closure0, A._PagedLayoutBuilderState_build__closure1]);
    _inheritMany(B.StatefulWidget, [A.ListenableListener, A.PagedLayoutBuilder, A.MasterScroller]);
    _inheritMany(B.State, [A._ListenableListenerState, A._PagedLayoutBuilderState, A._MasterScrollerState]);
    _inheritMany(B.Closure, [A._PagedLayoutBuilderState__newPageProgressIndicatorBuilder_closure, A._PagedLayoutBuilderState_build_closure0, A._PagedLayoutBuilderState_build__closure2, A._PagedLayoutBuilderState__buildListItemWidget_closure, A.PagedSliverList_build_closure1, A.PagedSliverList_build_closure, A.PagedSliverList_build_closure0, A._MasterScrollerState_initState_closure]);
    _inherit(A._PagedLayoutBuilderState_build_closure, B.Closure0Args);
    _inherit(A.PagedListView, B.BoxScrollView);
    _mixinHard(A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin, B.RenderObjectWithChildMixin);
    _mixin(A._RenderSliverSingleBoxAdapter_RenderSliver_RenderObjectWithChildMixin_RenderSliverHelpers, B.RenderSliverHelpers);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"RenderSliverSingleBoxAdapter":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"RenderSliverFillRemaining":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"SliverFillRemaining":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverFillRemainingWithoutScrollable":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagingController":{"ValueNotifier":["PagingState<1,2>"],"Listenable":[]},"ListenableListener":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ListenableListenerState":{"State":["ListenableListener"]},"FooterTile":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"NewPageProgressIndicator":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagedLayoutBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PagedLayoutBuilderState":{"State":["PagedLayoutBuilder<1,2>"]},"_FirstPageStatusIndicatorBuilder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagedListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagedSliverList":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ChapterEnd":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"MasterScroller":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MasterScrollerState":{"State":["MasterScroller"]}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      ContainerLayer: findType("ContainerLayer"),
      JSArray_Chapter: findType("JSArray<Chapter>"),
      JSArray_of_void_Function_PagingStatus: findType("JSArray<~(PagingStatus)>"),
      JSArray_of_void_Function_int: findType("JSArray<~(int)>"),
      ObserverList_of_void_Function_PagingStatus: findType("ObserverList<~(PagingStatus)>"),
      ObserverList_of_void_Function_int: findType("ObserverList<~(int)>"),
      PagedChildBuilderDelegate_Chapter: findType("PagedChildBuilderDelegate<Chapter>"),
      PagedListView_int_Chapter: findType("PagedListView<int,Chapter>"),
      PagingController_int_Chapter: findType("PagingController<int,Chapter>"),
      PagingState_int_Chapter: findType("PagingState<int,Chapter>"),
      SliverConstraints: findType("SliverConstraints"),
      SliverPhysicalParentData: findType("SliverPhysicalParentData"),
      ValueKey_String: findType("ValueKey<String>"),
      void: findType("~"),
      void_Function_PagingStatus: findType("~(PagingStatus)")
    };
  })();
  (function constants() {
    C.ChapterEnd_null = new A.ChapterEnd(null);
    C.EdgeInsets_0_16_0_16 = new B.EdgeInsets(0, 16, 0, 16);
    C.ErrorBox_JCe = new E.ErrorBox("First Page InfScroll Error", null);
    C.ErrorBox_XqC = new E.ErrorBox("New Page InfScroll Error", null);
    C.FooterTile_tLx = new A.FooterTile(I.CircularProgressIndicator_null_null, null);
    C.LoadingPage_aKF = new B.LoadingPage("Loading first page...", null);
    C.LoadingPage_l3f = new B.LoadingPage("No chapters...", null);
    C.NewPageProgressIndicator_null = new A.NewPageProgressIndicator(null);
    C.EdgeInsets_0_25_0_100 = new B.EdgeInsets(0, 25, 0, 100);
    C.Icon_m1r = new B.Icon(L.IconData_59729_RpgAwesome_null_false, 50, F.Color_JRH, null, null, null);
    C.Center_d4S = new B.Center(D.Alignment_0_0, null, null, C.Icon_m1r, null);
    C.Padding_VmP = new B.Padding(C.EdgeInsets_0_25_0_100, C.Center_d4S, null);
    C.PagedLayoutProtocol_0 = new A.PagedLayoutProtocol(0, "sliver");
    C.PagingStatus_0 = new A.PagingStatus(0, "completed");
    C.PagingStatus_1 = new A.PagingStatus(1, "noItemsFound");
    C.PagingStatus_2 = new A.PagingStatus(2, "loadingFirstPage");
    C.PagingStatus_3 = new A.PagingStatus(3, "ongoing");
    C.PagingStatus_4 = new A.PagingStatus(4, "firstPageError");
    C.ValueKey_title = new B.ValueKey("title", type$.ValueKey_String);
    C.TitleWidget_ValueKey_title = new G.TitleWidget(C.ValueKey_title);
    C.ValueKey_IWE = new B.ValueKey("InfScrollScaffold!", type$.ValueKey_String);
    C.ValueKey_MZv = new B.ValueKey("InfPagedListView!", type$.ValueKey_String);
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_89", e: "endPart", h: h});
})($__dart_deferred_initializers__, "SKvwuBEot6cuv0/zWZhgriUavIc=");
;