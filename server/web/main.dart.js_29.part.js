// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_29", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B,
  A = {
    IsFallbackProvider$(child, showFonts) {
      return new A.IsFallbackProvider(showFonts, child, null);
    },
    IsFallbackProvider: function IsFallbackProvider(t0, t1, t2) {
      this.showFonts = t0;
      this.child = t1;
      this.key = t2;
    }
  };
  B = holdersList[0];
  A = hunkHelpers.updateHolder(holdersList[50], A);
  A.IsFallbackProvider.prototype = {
    updateShouldNotify$1(oldWidget) {
      if (oldWidget instanceof A.IsFallbackProvider)
        return this.showFonts === oldWidget.showFonts;
      else
        return true;
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.IsFallbackProvider, B.InheritedWidget);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"IsFallbackProvider":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_29", e: "endPart", h: h});
})($__dart_deferred_initializers__, "0N6oy5nMeBxaAYcqK/kaggj24mI=");
;