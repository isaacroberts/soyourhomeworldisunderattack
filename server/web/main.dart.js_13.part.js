// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_13", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {SpanHoldingCode: function SpanHoldingCode() {
    }};
  A = holdersList[0];
  C = holdersList[2];
  B = hunkHelpers.updateHolder(holdersList[52], B);
  B.SpanHoldingCode.prototype = {
    load$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, _i, span;
      var $async$load$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.spans, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              span = t1[_i];
              $async$goto = !span.isLoaded$0() ? 6 : 7;
              break;
            case 6:
              // then
              $async$goto = 8;
              return A._asyncAwait(span.load$0(), $async$load$0);
            case 8:
              // returning from await.
            case 7:
              // join
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$load$0, $async$completer);
    },
    isLoaded$0() {
      var t1, t2, _i;
      for (t1 = this.spans, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        if (!t1[_i].isLoaded$0())
          return false;
      return true;
    },
    renderSpans$2$crossAxisAlignment(context, crossAxisAlignment) {
      var showFonts, t2, t3, _i, s,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.IsFallbackProvider);
      t1 = t1 == null ? null : t1.showFonts;
      showFonts = t1 !== false;
      t1 = A._setArrayType([], type$.JSArray_Widget);
      for (t2 = this.spans, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        s = t2[_i];
        t1.push(showFonts ? s.element$1(context) : s.fallback$1(context));
      }
      return A.Column$(t1, crossAxisAlignment, null, C.MainAxisAlignment_0, C.MainAxisSize_0);
    },
    renderSpans$1(context) {
      return this.renderSpans$2$crossAxisAlignment(context, C.CrossAxisAlignment_2);
    },
    element$1(context) {
      return this.renderSpans$1(context);
    },
    fallback$1(context) {
      return this.element$1(context);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function aliases() {
    var _ = B.SpanHoldingCode.prototype;
    _.super$SpanHoldingCode$renderSpans = _.renderSpans$2$crossAxisAlignment;
    _.super$SpanHoldingCode$element = _.element$1;
  })();
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.SpanHoldingCode, A.Holder);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"SpanHoldingCode":{"Holder":[]}}'));
  var type$ = {
    IsFallbackProvider: A.findType("IsFallbackProvider"),
    JSArray_Widget: A.findType("JSArray<Widget>"),
    dynamic: A.findType("@")
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_13", e: "endPart", h: h});
})($__dart_deferred_initializers__, "McRYli03gpAwdjekM0KXqjvuHNw=");
;