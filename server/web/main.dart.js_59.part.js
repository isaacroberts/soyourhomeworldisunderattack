// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_59", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    ElevatedButton$(autofocus, child, clipBehavior, focusNode, key, onFocusChange, onHover, onLongPress, onPressed, statesController, style) {
      return new B.ElevatedButton(onPressed, onLongPress, onHover, onFocusChange, style, clipBehavior, focusNode, false, statesController, true, null, child, key);
    },
    _scaledPadding(context) {
      var theme = A.Theme_of(context),
        t1 = theme.textTheme.labelLarge,
        defaultFontSize = t1 == null ? null : t1.fontSize;
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = A.MediaQuery__maybeOf(context, C._MediaQueryAspect_4);
      t1 = t1 == null ? null : t1.get$textScaler();
      if (t1 == null)
        t1 = C._LinearTextScaler_1;
      return A.ButtonStyleButton_scaledPadding(new A.EdgeInsets(24, 0, 24, 0), new A.EdgeInsets(12, 0, 12, 0), new A.EdgeInsets(6, 0, 6, 0), defaultFontSize * t1.textScaleFactor / 14);
    },
    ElevatedButton: function ElevatedButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.onPressed = t0;
      _.onLongPress = t1;
      _.onHover = t2;
      _.onFocusChange = t3;
      _.style = t4;
      _.clipBehavior = t5;
      _.focusNode = t6;
      _.autofocus = t7;
      _.statesController = t8;
      _.isSemanticButton = t9;
      _.tooltip = t10;
      _.child = t11;
      _.key = t12;
    },
    _ElevatedButtonDefaultsM3: function _ElevatedButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.context = t0;
      _.___ElevatedButtonDefaultsM3__colors_FI = $;
      _.textStyle = t1;
      _.backgroundColor = t2;
      _.foregroundColor = t3;
      _.overlayColor = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.elevation = t7;
      _.padding = t8;
      _.minimumSize = t9;
      _.fixedSize = t10;
      _.maximumSize = t11;
      _.iconColor = t12;
      _.iconSize = t13;
      _.iconAlignment = t14;
      _.side = t15;
      _.shape = t16;
      _.mouseCursor = t17;
      _.visualDensity = t18;
      _.tapTargetSize = t19;
      _.animationDuration = t20;
      _.enableFeedback = t21;
      _.alignment = t22;
      _.splashFactory = t23;
      _.backgroundBuilder = t24;
      _.foregroundBuilder = t25;
    },
    _ElevatedButtonDefaultsM3_backgroundColor_closure: function _ElevatedButtonDefaultsM3_backgroundColor_closure(t0) {
      this.$this = t0;
    },
    _ElevatedButtonDefaultsM3_foregroundColor_closure: function _ElevatedButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _ElevatedButtonDefaultsM3_overlayColor_closure: function _ElevatedButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _ElevatedButtonDefaultsM3_elevation_closure: function _ElevatedButtonDefaultsM3_elevation_closure() {
    },
    _ElevatedButtonDefaultsM3_iconColor_closure: function _ElevatedButtonDefaultsM3_iconColor_closure(t0) {
      this.$this = t0;
    },
    _ElevatedButtonDefaultsM3_mouseCursor_closure: function _ElevatedButtonDefaultsM3_mouseCursor_closure() {
    },
    ElevatedButtonTheme_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.ElevatedButtonTheme);
      t1 = A.Theme_of(context);
      return t1.elevatedButtonTheme;
    }
  };
  A = holdersList[0];
  C = holdersList[2];
  B = hunkHelpers.updateHolder(holdersList[42], B);
  B.ElevatedButton.prototype = {
    defaultStyleOf$1(context) {
      var _null = null;
      A.Theme_of(context);
      A.Theme_of(context);
      return new B._ElevatedButtonDefaultsM3(context, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    themeStyleOf$1(context) {
      return B.ElevatedButtonTheme_of(context).style;
    }
  };
  B._ElevatedButtonDefaultsM3.prototype = {
    get$_elevated_button$_colors() {
      var t1, _this = this,
        value = _this.___ElevatedButtonDefaultsM3__colors_FI;
      if (value === $) {
        t1 = A.Theme_of(_this.context);
        _this.___ElevatedButtonDefaultsM3__colors_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___ElevatedButtonDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$textStyle() {
      return new A.WidgetStatePropertyAll(A.Theme_of(this.context).textTheme.labelLarge, type$.WidgetStatePropertyAll_nullable_TextStyle);
    },
    get$backgroundColor() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_backgroundColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    get$foregroundColor() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_foregroundColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    get$overlayColor() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    get$shadowColor() {
      var t1 = this.get$_elevated_button$_colors()._shadow;
      if (t1 == null)
        t1 = C.Color_vnR;
      return new A.WidgetStatePropertyAll(t1, type$.WidgetStatePropertyAll_Color);
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_G5s;
    },
    get$elevation() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_elevation_closure(), type$._WidgetStatePropertyWith_double);
    },
    get$padding() {
      return new A.WidgetStatePropertyAll(B._scaledPadding(this.context), type$.WidgetStatePropertyAll_EdgeInsetsGeometry);
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_64_40;
    },
    get$iconSize() {
      return C.WidgetStatePropertyAll_18;
    },
    get$iconColor() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_iconColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_HBn;
    },
    get$shape() {
      return C.WidgetStatePropertyAll_oQi;
    },
    get$mouseCursor() {
      return new A._WidgetStatePropertyWith(new B._ElevatedButtonDefaultsM3_mouseCursor_closure(), type$._WidgetStatePropertyWith_nullable_MouseCursor);
    },
    get$visualDensity() {
      return A.Theme_of(this.context).visualDensity;
    },
    get$tapTargetSize() {
      return A.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return A.Theme_of(this.context).splashFactory;
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  B._ElevatedButtonDefaultsM3_backgroundColor_closure.prototype = {
    call$1(states) {
      var t1, t2;
      if (states.contains$1(0, C.WidgetState_6)) {
        t1 = this.$this.get$_elevated_button$_colors().onSurface;
        return A.Color$fromARGB(31, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      t1 = this.$this.get$_elevated_button$_colors();
      t2 = t1._surfaceContainerLow;
      return t2 == null ? t1.surface : t2;
    },
    $signature: 5
  };
  B._ElevatedButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      if (states.contains$1(0, C.WidgetState_6)) {
        t1 = this.$this.get$_elevated_button$_colors().onSurface;
        return A.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      return this.$this.get$_elevated_button$_colors().primary;
    },
    $signature: 5
  };
  B._ElevatedButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      if (states.contains$1(0, C.WidgetState_2))
        return this.$this.get$_elevated_button$_colors().primary.withOpacity$1(0.1);
      if (states.contains$1(0, C.WidgetState_0))
        return this.$this.get$_elevated_button$_colors().primary.withOpacity$1(0.08);
      if (states.contains$1(0, C.WidgetState_1))
        return this.$this.get$_elevated_button$_colors().primary.withOpacity$1(0.1);
      return null;
    },
    $signature: 32
  };
  B._ElevatedButtonDefaultsM3_elevation_closure.prototype = {
    call$1(states) {
      if (states.contains$1(0, C.WidgetState_6))
        return 0;
      if (states.contains$1(0, C.WidgetState_2))
        return 1;
      if (states.contains$1(0, C.WidgetState_0))
        return 3;
      if (states.contains$1(0, C.WidgetState_1))
        return 1;
      return 1;
    },
    $signature: 129
  };
  B._ElevatedButtonDefaultsM3_iconColor_closure.prototype = {
    call$1(states) {
      var t1, _this = this;
      if (states.contains$1(0, C.WidgetState_6)) {
        t1 = _this.$this.get$_elevated_button$_colors().onSurface;
        return A.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      if (states.contains$1(0, C.WidgetState_2))
        return _this.$this.get$_elevated_button$_colors().primary;
      if (states.contains$1(0, C.WidgetState_0))
        return _this.$this.get$_elevated_button$_colors().primary;
      if (states.contains$1(0, C.WidgetState_1))
        return _this.$this.get$_elevated_button$_colors().primary;
      return _this.$this.get$_elevated_button$_colors().primary;
    },
    $signature: 5
  };
  B._ElevatedButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (states.contains$1(0, C.WidgetState_6))
        return C.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: 36
  };
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(B.ElevatedButton, A.ButtonStyleButton);
    _inherit(B._ElevatedButtonDefaultsM3, A.ButtonStyle);
    _inheritMany(A.Closure, [B._ElevatedButtonDefaultsM3_backgroundColor_closure, B._ElevatedButtonDefaultsM3_foregroundColor_closure, B._ElevatedButtonDefaultsM3_overlayColor_closure, B._ElevatedButtonDefaultsM3_elevation_closure, B._ElevatedButtonDefaultsM3_iconColor_closure, B._ElevatedButtonDefaultsM3_mouseCursor_closure]);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"ElevatedButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ElevatedButtonDefaultsM3":{"ButtonStyle":[]},"ElevatedButtonTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var type$ = {
    ElevatedButtonTheme: A.findType("ElevatedButtonTheme"),
    WidgetStatePropertyAll_Color: A.findType("WidgetStatePropertyAll<Color>"),
    WidgetStatePropertyAll_EdgeInsetsGeometry: A.findType("WidgetStatePropertyAll<EdgeInsetsGeometry>"),
    WidgetStatePropertyAll_nullable_TextStyle: A.findType("WidgetStatePropertyAll<TextStyle?>"),
    _WidgetStatePropertyWith_Color: A.findType("_WidgetStatePropertyWith<Color>"),
    _WidgetStatePropertyWith_double: A.findType("_WidgetStatePropertyWith<double>"),
    _WidgetStatePropertyWith_nullable_Color: A.findType("_WidgetStatePropertyWith<Color?>"),
    _WidgetStatePropertyWith_nullable_MouseCursor: A.findType("_WidgetStatePropertyWith<MouseCursor0?>")
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_59", e: "endPart", h: h});
})($__dart_deferred_initializers__, "LzBVFvBsiZ4xLyNh6/PvvWgNl5w=");
;